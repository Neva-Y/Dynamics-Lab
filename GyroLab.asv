clc
clear all
close all

syms t real

%alpha__, beta_, gamma_ and delta_ time functions
syms alpha_(t) beta_(t) gamma_(t) delta_(t)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Set up measurements (symbolic in part 1)
% % Constants
% syms g                                                      % gravity [ms^-2]
% % Frame Measurements
% syms L                                                      % Distance from O to G [m]
% syms h_rod                                                  % Height of vertical rod [m]
% syms R_min_H_tor                                            % Horizontal torus minor radius [m]
% syms R_maj_H_tor                                            % Horizontal torus marjor radius[m]
% syms R_min_V_tor                                            % Vertical torus minor radius [m]
% syms R_maj_V_tor                                            % Vertical torus major radius [m]
% 
% % Rotor measurements
% syms m_frame                                                % Mass of frame [kg] (Measured)
% syms m_rotor                                                % Mass of rotor [kg] (Measured)
% syms H_rot                                                  % Rotor rod height [m]
% syms r_rot                                                  % Rotor rod radius [m] (Vertical rod)
% syms R_min_rotor                                            % Minor radius of rotor torus [m]
% syms R_maj_rotor                                            % Major radius of rotor torus [m]
% 
% % Top and bottom spheres (For animation only, DO NOT MODEL THEM AS A PART OF THE FRAME)
% syms R_sph                                                  %radius of the top and bottom spheres [m]

%Calculated constants
%%%%%% Frame %%%%%

% Total frame density [kg/m^3] (Test).
% Variable Name: rho_T
g = 9.81;
m_frame = 0.023;                                            % Mass of frame [kg] (Measured)
m_rotor = 0.045;                                            % Mass of rotor [kg] (Measured)
H_rot = 60*10^-3;
r_rot = 1.555*10^-3;
R_min_rotor = 3.305*10^-3;
R_maj_rotor = 28*10^-3;
h_rod = 88*10^-3;
R_min_H_tor = 1.155*10^-3;
R_maj_H_tor = 36*10^-3;
R_sph = 2.365*10^-3;
R_min_V_tor = 1.715*10^-3;
R_maj_V_tor = 31.5*10^-3;
L = h_rod/2;           





Vol_V_tor = (2*pi*R_maj_V_tor)*(pi*R_min_V_tor^2);                   % Correct      
Vol_H_tor =(2*pi*R_maj_H_tor)*(pi*R_min_H_tor^2);                    % Correct      
Vol_rod_ends = (h_rod-H_rot)*pi*r_rot^2;                             % Correct      

rho_T = m_frame/(Vol_V_tor+Vol_H_tor+Vol_rod_ends);                  % Correct              

                          
%%%%%% Rotor %%%%%

% Desity of the rotor [kg/m^3] (Pretest).
% Variable Name: rho_rotor

Vol_central_rod = H_rot*pi*r_rot^2;                                                              % Correct      
Vol_rot_tor = (2*pi*R_maj_rotor)*(pi*R_min_rotor^2); % Assume mass is only on the torus          % Correct      

rho_rotor = m_rotor/(Vol_rot_tor+Vol_central_rod);                                               % Correct      

% Central rod considered as a cylinder belonging to the frame

% Recalculated mass of frame [kg] (Test).
% Variable Name: m_frame 
m_frame = m_frame + (Vol_central_rod * rho_rotor);                              % Correct 

% Central rod considered as a cylinder belonging to the frame

% Recalculated mass of frame [kg] (Test).
% Variable Name: m_frame 
             

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Inertia tensor
% Inerta tensor of the 3 frame components in frame 3 

% Inertia tensor of horizontal torus about its center of mass expressed in frame 3 (Pretest). 
% Variable Name: IGtorH_3
m_H_tor = rho_T*Vol_H_tor;                                                             % Correct      

IGtorH_3 = [m_H_tor/8*(5*R_min_H_tor^2 + 4*R_maj_H_tor^2) 0 0; 
            0 m_H_tor/8*(5*R_min_H_tor^2 + 4*R_maj_H_tor^2) 0;                         % Correct      
            0 0 m_H_tor/4*(4*R_maj_H_tor^2 + 3*R_min_H_tor^2)];

% Inertia tensor of vertical torus about its center of mass expressed in frame 3 (Test)
% Variable Name: IGtorV_3
m_V_tor = rho_T*Vol_V_tor;                     % Correct 

IGtorV_3 = [m_V_tor/8*(5*R_min_V_tor^2 + 4*R_maj_V_tor^2) 0 0;                      % Correct 
            0 m_V_tor/4*(4*R_maj_V_tor^2 + 3*R_min_V_tor^2) 0;
            0 0 m_V_tor/8*(5*R_min_V_tor^2 + 4*R_maj_V_tor^2)];

% Inertia tensor of the rod about its center of mass expressed in frame 3 
% Variable Name: IGrod_3
m_rod = rho_T*Vol_rod_ends + rho_rotor*Vol_central_rod;                     % Correct 

IGrod_3 = [m_rod/12*h_rod^2 + 1/4*m_rod*r_rot^2 0 0;                     % Correct 
           0 m_rod/12*h_rod^2 + 1/4*m_rod*r_rot^2 0;
           0 0 1/2*m_rod*r_rot^2];

% Inertia tensor of the frame about its center of mass expressed in frame 3 (Test)
% Variable Name: IGframe_3
IGframe_3 = IGrod_3 + IGtorV_3 + IGtorH_3;                     % Correct 

% Inertia tensor of rotor about its center of mass in frame 4 
% Variable Name: IGrotor_4
m_rot = rho_rotor*pi*(R_maj_rotor)*2*pi*R_min_rotor^2;                         % Correct

IGrotor_4 = [m_rot/8*(5*R_min_rotor^2 + 4*R_maj_rotor^2) 0 0;                      % Correct 
            0 m_rot/8*(5*R_min_rotor^2 + 4*R_maj_rotor^2) 0;
            0 0 m_rot/4*(4*R_maj_rotor^2 + 3*R_min_rotor^2)];


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Set up rotational matrices

%Rotation matrix from frame 4 to frame 0 (Pretest).
%Variable Name: R04
R01 = [cos(alpha_) -sin(alpha_) 0;
       sin(alpha_) cos(alpha_) 0;               % Correct      
       0 0 1];
R12 = [1 0 0;
       0 cos(beta_) -sin(beta_);
       0 sin(beta_) cos(beta_)];
R23 = [cos(gamma_) -sin(gamma_) 0;              % Correct      
       sin(gamma_) cos(gamma_) 0;
       0 0 1];
R34 = [cos(delta_) -sin(delta_) 0;
       sin(delta_) cos(delta_) 0;               % Correct      
       0 0 1];
R04 = R01*R12*R23*R34;                           % Correct      


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Kinematics
% Centers of mass positions from origin
% Center of mass position of the frame. Variable Name: rOG_3
rOG_3 = [0;0;L];                             % Correct

% Center of mass position of the rotor. Variable Name: rOG_4
rOG_4 = inv(R34)*rOG_3;                           % Correct

% Absolute Angular velocity of frame 1 represented in frame 1 
% Variable Name: w1_1
w1_1 = [0;0;diff(alpha_,t)];                            % Correct


% Relative angular velocity of frame 2 relative to 1 represented in frame 2 
% Variable Name: w21_2
w21_2 = [diff(beta_,t);0;0];                           % Correct


% Relative angular velocity of frame 3 relative to 2 represented in frame 3
% Variable Name: w32_3
w32_3 = [0;0;diff(gamma_,t)];                            % Correct


% Relative angular velocity of frame 4 relative to 3 represented in frame 4
% Variable Name: w43_4
w43_4 = [0;0;diff(delta_,t)];                            % Correct


% Absolute angular velocity of frame 3 represented in frame 3 (Test)
% Variable Name: w3_3
w3_3 = w32_3 + inv(R23)*w21_2 + inv(R12*R23)*w1_1;                           % Correct




% Velocity of center of mass of the frame represented in frame 3 (Test)
% Variable Name: rOG_3_dot
rOG_3_dot = diff(rOG_3,t) + cross(w3_3, rOG_3);                       % Correct 



% Acceleration of center of mass of the rotor represented in frame 4 (Test)
% Variable Name: rOG_4_dotdot
w4_4 = w43_4 + inv(R34)*w3_3;                                           % Correct
rOG_4_dot = diff(rOG_4,t) + cross(w4_4, rOG_4);                         % Correct
rOG_4_dotdot = diff(rOG_4_dot,t) + cross(w4_4, rOG_4_dot);               % Correct

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Newton-Euler Equation Setup
% Force due to gravity on the torus in frame zero
% Variable Name: FGrotor_0
FGrotor_0 = [0;0;-m_rot*g];                           % Correct


% Force due to gravity on the frame in frame zero
% Variable Name: FGframe_0
FGframe_0 = [0;0; -m_frame*g];                      % Correct 


% rotor angular momentum and its time derivative
% Variable Name: hGrotor_4
hGrotor_4 = IGrotor_4 * w4_4;                     % Correct 


% Variable Name: hGrotor_4_dot (Test)
hGrotor_4_dot = diff(hGrotor_4,t) + cross(w4_4, hGrotor_4);                     % Correct 


% frame angular momentum and its time derivative
% Variable Name: hGframe_3
hGframe_3 = IGframe_3 * w3_3;                     % Correct 


% Variable Name: hGframe_3_dot (Test)
hGframe_3_dot = diff(hGframe_3,t) + cross(w3_3, hGframe_3);                     % Correct 


%Symbolic variables for reaction Forces and Moments
syms F_Ox F_Oy F_Oz real
syms F_Gx F_Gy F_Gz real
syms M_Gx M_Gy M_Gz real
syms M_Ox M_Oy M_Oz real

% reaction forces
% Reaction force to the rotor at Point G
Frotor_4 = [F_Gx; F_Gy; F_Gz];
% Reaction moment to the rotor
Mrotor_4 = [M_Gx; M_Gy; M_Gz];
% Reaction force to the frame at Point O
Fframe_3 = [F_Ox; F_Oy; F_Oz];
% Reaction moment to the frame
Mframe_3 = [M_Ox; M_Oy; M_Oz];

%zero equations for the reaction forces/moments that don't exist (Prestest)
% variable name: zero_reaction
zero_reaction = [M_Gz; M_Ox; M_Oy; M_Oz] == 0;                           % Correct      


%Linear NE Equations for the Rotor (Pretest)
% variable name: lin_NE_rotor
%lin_NE_rotor = Frotor_4  ==  m_rot*rOG_4_dotdot - inv(R04)*FGrotor_0                            % Correct

% %Linear NE Equations for the Frame (Test)
% variable name: lin_NE_frame
%rOG_3_dotdot = diff(rOG_3_dot,t) + cross(w3_3, rOG_3_dot)
%lin_NE_frame = Fframe_3  == m_frame*rOG_3_dotdot + R34*Frotor_4 - inv(R01*R12*R23)*FGframe_0

% %Angular NE Equations for the Rotor (Test)
% variable name: ang_NE_rotor
%ang_NE_rotor = Mrotor_4 == hGrotor_4_dot + cross(rOG_4, Frotor_4)

% %Angular NE Equations for the Frame (Test)
% variable name: ang_NE_frame
%ang_NE_frame = Mframe_3 == R34*Mrotor_4 + hGframe_3_dot + cross(rOG_3, Fframe_3)


lin_NE_rotor = [F_Gx == (2*R_maj_rotor*R_min_rotor^2*g*m_rotor*pi^2*sin(beta_(t))*(cos(delta_(t))*sin(gamma_(t)) + cos(gamma_(t))*sin(delta_(t))))/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2) - (R_maj_rotor*R_min_rotor^2*m_rotor*pi^2*(L*(cos(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t, 2) + cos(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t, 2) - cos(beta_(t))*cos(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + sin(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t, 2) - sin(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t, 2) + cos(beta_(t))*sin(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + cos(gamma_(t))*sin(beta_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + cos(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t))*diff(delta_(t), t) - sin(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t))*diff(delta_(t), t)) - L*(cos(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t)) - sin(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t)))*(cos(beta_(t))*diff(alpha_(t), t) + diff(delta_(t), t) + diff(gamma_(t), t)))*2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2); F_Gy == (R_maj_rotor*R_min_rotor^2*m_rotor*pi^2*(L*(- cos(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t, 2) - sin(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t, 2) + cos(beta_(t))*sin(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + cos(gamma_(t))*sin(beta_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + sin(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t, 2) + cos(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t, 2) - cos(beta_(t))*cos(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + cos(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t))*diff(delta_(t), t) + sin(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t))*diff(delta_(t), t)) - L*(cos(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t)) + sin(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t)))*(cos(beta_(t))*diff(alpha_(t), t) + diff(delta_(t), t) + diff(gamma_(t), t)))*2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2) + (2*R_maj_rotor*R_min_rotor^2*g*m_rotor*pi^2*sin(beta_(t))*(cos(delta_(t))*cos(gamma_(t)) - sin(delta_(t))*sin(gamma_(t))))/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2); F_Gz == (2*R_maj_rotor*R_min_rotor^2*g*m_rotor*pi^2*cos(beta_(t)))/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2) - (R_maj_rotor*R_min_rotor^2*m_rotor*pi^2*(L*(cos(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t)) + sin(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t)))^2 + L*(cos(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t)) - sin(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t)))^2)*2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2)];
lin_NE_frame = [F_Ox == F_Gx*cos(delta_(t)) - (L*(sin(gamma_(t))*diff(beta_(t), t, 2) + cos(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t, 2) - cos(beta_(t))*cos(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) - L*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t))*(cos(beta_(t))*diff(alpha_(t), t) + diff(gamma_(t), t)))*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2)) - F_Gy*sin(delta_(t)) + g*sin(beta_(t))*sin(gamma_(t))*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2)); F_Oy == F_Gy*cos(delta_(t)) - (L*(cos(gamma_(t))*diff(beta_(t), t, 2) - sin(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t, 2) + cos(beta_(t))*sin(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + cos(gamma_(t))*sin(beta_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + L*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t))*(cos(beta_(t))*diff(alpha_(t), t) + diff(gamma_(t), t)))*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2)) + F_Gx*sin(delta_(t)) + g*cos(gamma_(t))*sin(beta_(t))*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2)); F_Oz == F_Gz - (L*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t))^2 + L*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t))^2)*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2)) + g*cos(beta_(t))*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2))];
ang_NE_rotor = [M_Gx == (R_maj_rotor*R_min_rotor^2*m_rotor*pi^2*(cos(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t)) + sin(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t)))*(R_maj_rotor^2/2 + (5*R_min_rotor^2)/8)*(cos(beta_(t))*diff(alpha_(t), t) + diff(delta_(t), t) + diff(gamma_(t), t))*2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2) - (R_maj_rotor*R_min_rotor^2*m_rotor*pi^2*(R_maj_rotor^2 + (3*R_min_rotor^2)/4)*(cos(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t)) + sin(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t)))*(cos(beta_(t))*diff(alpha_(t), t) + diff(delta_(t), t) + diff(gamma_(t), t))*2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2) - (R_maj_rotor*R_min_rotor^2*m_rotor*pi^2*(R_maj_rotor^2/2 + (5*R_min_rotor^2)/8)*(- cos(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t, 2) - sin(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t, 2) + cos(beta_(t))*sin(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + cos(gamma_(t))*sin(beta_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + sin(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t, 2) + cos(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t, 2) - cos(beta_(t))*cos(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + cos(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t))*diff(delta_(t), t) + sin(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t))*diff(delta_(t), t))*2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2); M_Gy == (R_maj_rotor*R_min_rotor^2*m_rotor*pi^2*(cos(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t)) - sin(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t)))*(R_maj_rotor^2/2 + (5*R_min_rotor^2)/8)*(cos(beta_(t))*diff(alpha_(t), t) + diff(delta_(t), t) + diff(gamma_(t), t))*2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2) - (R_maj_rotor*R_min_rotor^2*m_rotor*pi^2*(R_maj_rotor^2 + (3*R_min_rotor^2)/4)*(cos(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t)) - sin(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t)))*(cos(beta_(t))*diff(alpha_(t), t) + diff(delta_(t), t) + diff(gamma_(t), t))*2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2) - (R_maj_rotor*R_min_rotor^2*m_rotor*pi^2*(R_maj_rotor^2/2 + (5*R_min_rotor^2)/8)*(cos(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t, 2) + cos(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t, 2) - cos(beta_(t))*cos(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + sin(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t, 2) - sin(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t, 2) + cos(beta_(t))*sin(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + cos(gamma_(t))*sin(beta_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + cos(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t))*diff(delta_(t), t) - sin(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t))*diff(delta_(t), t))*2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2); M_Gz == (2*R_maj_rotor*R_min_rotor^2*m_rotor*pi^2*(R_maj_rotor^2 + (3*R_min_rotor^2)/4)*(cos(beta_(t))*diff(alpha_(t), t, 2) - sin(beta_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + diff(delta_(t), t, 2) + diff(gamma_(t), t, 2)))/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2)];
ang_NE_frame = [M_Ox == ((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2*(R_maj_H_tor^2/2 + (5*R_min_H_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - ((pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2))*(h_rod^2/12 + r_rot^2/4) + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2*(R_maj_V_tor^2/2 + (5*R_min_V_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2))*(cos(gamma_(t))*diff(beta_(t), t, 2) - sin(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t, 2) + cos(beta_(t))*sin(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + cos(gamma_(t))*sin(beta_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + M_Gx*cos(delta_(t)) - F_Oy*L - M_Gy*sin(delta_(t)) + (sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t))*(cos(beta_(t))*diff(alpha_(t), t) + diff(gamma_(t), t))*((2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2*(R_maj_V_tor^2 + (3*R_min_V_tor^2)/4))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - ((pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2))*(h_rod^2/12 + r_rot^2/4) + (2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2*(R_maj_H_tor^2/2 + (5*R_min_H_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2)) - (sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t))*(cos(beta_(t))*diff(alpha_(t), t) + diff(gamma_(t), t))*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2*(R_maj_H_tor^2 + (3*R_min_H_tor^2)/4))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (r_rot^2*((pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2)))/2 + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2*(R_maj_V_tor^2/2 + (5*R_min_V_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2)); M_Oy == M_Gy*cos(delta_(t)) - ((2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2*(R_maj_V_tor^2 + (3*R_min_V_tor^2)/4))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - ((pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2))*(h_rod^2/12 + r_rot^2/4) + (2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2*(R_maj_H_tor^2/2 + (5*R_min_H_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2))*(sin(gamma_(t))*diff(beta_(t), t, 2) + cos(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t, 2) - cos(beta_(t))*cos(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + F_Ox*L + M_Gx*sin(delta_(t)) - (cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t))*(cos(beta_(t))*diff(alpha_(t), t) + diff(gamma_(t), t))*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2*(R_maj_H_tor^2 + (3*R_min_H_tor^2)/4))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (r_rot^2*((pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2)))/2 + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2*(R_maj_V_tor^2/2 + (5*R_min_V_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2)) + (cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t))*(cos(beta_(t))*diff(alpha_(t), t) + diff(gamma_(t), t))*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2*(R_maj_H_tor^2/2 + (5*R_min_H_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - ((pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2))*(h_rod^2/12 + r_rot^2/4) + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2*(R_maj_V_tor^2/2 + (5*R_min_V_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2)); M_Oz == M_Gz + (cos(beta_(t))*diff(alpha_(t), t, 2) - sin(beta_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + diff(gamma_(t), t, 2))*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2*(R_maj_H_tor^2 + (3*R_min_H_tor^2)/4))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (r_rot^2*((pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2)))/2 + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2*(R_maj_V_tor^2/2 + (5*R_min_V_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2)) - (cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t))*((2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2*(R_maj_V_tor^2 + (3*R_min_V_tor^2)/4))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - ((pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2))*(h_rod^2/12 + r_rot^2/4) + (2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2*(R_maj_H_tor^2/2 + (5*R_min_H_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2)) + (cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t))*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2*(R_maj_H_tor^2/2 + (5*R_min_H_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - ((pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2))*(h_rod^2/12 + r_rot^2/4) + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2*(R_maj_V_tor^2/2 + (5*R_min_V_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2))];



% By this point, we have 16 unknown.
% Make sure you have 16 equation in symbolic variable equations. From top to bottom
% in sequence of zero_reaction, rotor linear equation, frame linear equation
% rotor angular equation, frame angular equation
% The following variable is not tested, but it will help you with the rest of your modelling. 
% It is initially set to zeros for technical reasons. Change it accordingly.
% variable name: equations
% Remove comment of the next line once you have all the above equations and delete the last line with the zeros
equations = [zero_reaction; lin_NE_rotor; lin_NE_frame; ang_NE_rotor; ang_NE_frame];

eqs = [ang_NE_rotor(3); ang_NE_frame];
% eqs = subs(eqs, [M_Gz; M_Ox; M_Oy; M_Oz], [0;0;0;0]);
% eqs = subs(eqs, M_Ox, ((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2*(R_maj_H_tor^2/2 + (5*R_min_H_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - ((pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2))*(h_rod^2/12 + r_rot^2/4) + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2*(R_maj_V_tor^2/2 + (5*R_min_V_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2))*(cos(gamma_(t))*diff(beta_(t), t, 2) - sin(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t, 2) + cos(beta_(t))*sin(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + cos(gamma_(t))*sin(beta_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + M_Gx*cos(delta_(t)) - F_Oy*L - M_Gy*sin(delta_(t)) + (sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t))*(cos(beta_(t))*diff(alpha_(t), t) + diff(gamma_(t), t))*((2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2*(R_maj_V_tor^2 + (3*R_min_V_tor^2)/4))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - ((pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2))*(h_rod^2/12 + r_rot^2/4) + (2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2*(R_maj_H_tor^2/2 + (5*R_min_H_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2)) - (sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t))*(cos(beta_(t))*diff(alpha_(t), t) + diff(gamma_(t), t))*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2*(R_maj_H_tor^2 + (3*R_min_H_tor^2)/4))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (r_rot^2*((pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2)))/2 + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2*(R_maj_V_tor^2/2 + (5*R_min_V_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2)));
% eqs = subs(eqs, M_Oy, M_Gy*cos(delta_(t)) - ((2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2*(R_maj_V_tor^2 + (3*R_min_V_tor^2)/4))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - ((pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2))*(h_rod^2/12 + r_rot^2/4) + (2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2*(R_maj_H_tor^2/2 + (5*R_min_H_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2))*(sin(gamma_(t))*diff(beta_(t), t, 2) + cos(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t, 2) - cos(beta_(t))*cos(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + F_Ox*L + M_Gx*sin(delta_(t)) - (cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t))*(cos(beta_(t))*diff(alpha_(t), t) + diff(gamma_(t), t))*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2*(R_maj_H_tor^2 + (3*R_min_H_tor^2)/4))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (r_rot^2*((pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2)))/2 + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2*(R_maj_V_tor^2/2 + (5*R_min_V_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2)) + (cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t))*(cos(beta_(t))*diff(alpha_(t), t) + diff(gamma_(t), t))*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2*(R_maj_H_tor^2/2 + (5*R_min_H_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - ((pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2))*(h_rod^2/12 + r_rot^2/4) + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2*(R_maj_V_tor^2/2 + (5*R_min_V_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2)));
% eqs = subs(eqs, M_Oz, M_Gz + (cos(beta_(t))*diff(alpha_(t), t, 2) - sin(beta_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + diff(gamma_(t), t, 2))*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2*(R_maj_H_tor^2 + (3*R_min_H_tor^2)/4))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (r_rot^2*((pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2)))/2 + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2*(R_maj_V_tor^2/2 + (5*R_min_V_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2)) - (cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t))*((2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2*(R_maj_V_tor^2 + (3*R_min_V_tor^2)/4))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - ((pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2))*(h_rod^2/12 + r_rot^2/4) + (2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2*(R_maj_H_tor^2/2 + (5*R_min_H_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2)) + (cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t))*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2*(R_maj_H_tor^2/2 + (5*R_min_H_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - ((pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2))*(h_rod^2/12 + r_rot^2/4) + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2*(R_maj_V_tor^2/2 + (5*R_min_V_tor^2)/8))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2)));
eqs = subs(eqs, M_Gx, (R_maj_rotor*R_min_rotor^2*m_rotor*pi^2*(cos(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t)) + sin(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t)))*(R_maj_rotor^2/2 + (5*R_min_rotor^2)/8)*(cos(beta_(t))*diff(alpha_(t), t) + diff(delta_(t), t) + diff(gamma_(t), t))*2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2) - (R_maj_rotor*R_min_rotor^2*m_rotor*pi^2*(R_maj_rotor^2 + (3*R_min_rotor^2)/4)*(cos(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t)) + sin(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t)))*(cos(beta_(t))*diff(alpha_(t), t) + diff(delta_(t), t) + diff(gamma_(t), t))*2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2) - (R_maj_rotor*R_min_rotor^2*m_rotor*pi^2*(R_maj_rotor^2/2 + (5*R_min_rotor^2)/8)*(- cos(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t, 2) - sin(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t, 2) + cos(beta_(t))*sin(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + cos(gamma_(t))*sin(beta_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + sin(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t, 2) + cos(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t, 2) - cos(beta_(t))*cos(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + cos(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t))*diff(delta_(t), t) + sin(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t))*diff(delta_(t), t))*2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2));
eqs = subs(eqs, M_Gy, (R_maj_rotor*R_min_rotor^2*m_rotor*pi^2*(cos(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t)) - sin(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t)))*(R_maj_rotor^2/2 + (5*R_min_rotor^2)/8)*(cos(beta_(t))*diff(alpha_(t), t) + diff(delta_(t), t) + diff(gamma_(t), t))*2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2) - (R_maj_rotor*R_min_rotor^2*m_rotor*pi^2*(R_maj_rotor^2 + (3*R_min_rotor^2)/4)*(cos(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t)) - sin(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t)))*(cos(beta_(t))*diff(alpha_(t), t) + diff(delta_(t), t) + diff(gamma_(t), t))*2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2) - (R_maj_rotor*R_min_rotor^2*m_rotor*pi^2*(R_maj_rotor^2/2 + (5*R_min_rotor^2)/8)*(cos(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t, 2) + cos(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t, 2) - cos(beta_(t))*cos(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + sin(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t, 2) - sin(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t, 2) + cos(beta_(t))*sin(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + cos(gamma_(t))*sin(beta_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + cos(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t))*diff(delta_(t), t) - sin(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t))*diff(delta_(t), t))*2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2));
% eqs = subs(eqs, M_Gz, (2*R_maj_rotor*R_min_rotor^2*m_rotor*pi^2*(R_maj_rotor^2 + (3*R_min_rotor^2)/4)*(cos(beta_(t))*diff(alpha_(t), t, 2) - sin(beta_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + diff(delta_(t), t, 2) + diff(gamma_(t), t, 2)))/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2));
eqs = subs(eqs, F_Ox, F_Gx*cos(delta_(t)) - (L*(sin(gamma_(t))*diff(beta_(t), t, 2) + cos(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t, 2) - cos(beta_(t))*cos(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) - L*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t))*(cos(beta_(t))*diff(alpha_(t), t) + diff(gamma_(t), t)))*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2)) - F_Gy*sin(delta_(t)) + g*sin(beta_(t))*sin(gamma_(t))*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2)));
eqs = subs(eqs, F_Oy, F_Gy*cos(delta_(t)) - (L*(cos(gamma_(t))*diff(beta_(t), t, 2) - sin(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t, 2) + cos(beta_(t))*sin(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + cos(gamma_(t))*sin(beta_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + L*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t))*(cos(beta_(t))*diff(alpha_(t), t) + diff(gamma_(t), t)))*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2)) + F_Gx*sin(delta_(t)) + g*cos(gamma_(t))*sin(beta_(t))*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2)));
eqs = subs(eqs, F_Oz, F_Gz - (L*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t))^2 + L*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t))^2)*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2)) + g*cos(beta_(t))*((2*R_maj_H_tor*R_min_H_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) - (pi*m_frame*r_rot^2*(H_rot - h_rod))/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (2*R_maj_V_tor*R_min_V_tor^2*m_frame*pi^2)/(2*R_maj_H_tor*pi^2*R_min_H_tor^2 + 2*R_maj_V_tor*pi^2*R_min_V_tor^2 - pi*(H_rot - h_rod)*r_rot^2) + (pi*H_rot*m_rotor*r_rot^2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2)));
eqs = subs(eqs, F_Gx, (2*R_maj_rotor*R_min_rotor^2*g*m_rotor*pi^2*sin(beta_(t))*(cos(delta_(t))*sin(gamma_(t)) + cos(gamma_(t))*sin(delta_(t))))/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2) - (R_maj_rotor*R_min_rotor^2*m_rotor*pi^2*(L*(cos(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t, 2) + cos(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t, 2) - cos(beta_(t))*cos(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + sin(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t, 2) - sin(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t, 2) + cos(beta_(t))*sin(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + cos(gamma_(t))*sin(beta_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + cos(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t))*diff(delta_(t), t) - sin(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t))*diff(delta_(t), t)) - L*(cos(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t)) - sin(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t)))*(cos(beta_(t))*diff(alpha_(t), t) + diff(delta_(t), t) + diff(gamma_(t), t)))*2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2));
eqs = subs(eqs, F_Gy, (R_maj_rotor*R_min_rotor^2*m_rotor*pi^2*(L*(- cos(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t, 2) - sin(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t, 2) + cos(beta_(t))*sin(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + cos(gamma_(t))*sin(beta_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + sin(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t, 2) + cos(gamma_(t))*diff(gamma_(t), t)*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t, 2) - cos(beta_(t))*cos(gamma_(t))*diff(beta_(t), t)*diff(alpha_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(gamma_(t), t)*diff(alpha_(t), t)) + cos(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t))*diff(delta_(t), t) + sin(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t))*diff(delta_(t), t)) - L*(cos(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t)) + sin(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t)))*(cos(beta_(t))*diff(alpha_(t), t) + diff(delta_(t), t) + diff(gamma_(t), t)))*2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2) + (2*R_maj_rotor*R_min_rotor^2*g*m_rotor*pi^2*sin(beta_(t))*(cos(delta_(t))*cos(gamma_(t)) - sin(delta_(t))*sin(gamma_(t))))/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2));
eqs = subs(eqs, F_Gz, (2*R_maj_rotor*R_min_rotor^2*g*m_rotor*pi^2*cos(beta_(t)))/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2) - (R_maj_rotor*R_min_rotor^2*m_rotor*pi^2*(L*(cos(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t)) + sin(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t)))^2 + L*(cos(delta_(t))*(cos(gamma_(t))*diff(beta_(t), t) + sin(beta_(t))*sin(gamma_(t))*diff(alpha_(t), t)) - sin(delta_(t))*(sin(gamma_(t))*diff(beta_(t), t) - cos(gamma_(t))*sin(beta_(t))*diff(alpha_(t), t)))^2)*2)/(2*R_maj_rotor*pi^2*R_min_rotor^2 + H_rot*pi*r_rot^2));


S = solve(eqs == 0,[M_Gz, M_Ox, M_Oy, M_Oz]);
%eqs = [0 == S.M_Gz; 0 == S.M_Ox; 0 == S.M_Oy; 0 == S.M_Oz];

%%
syms alpha beta gamma delta alpha_d alpha_dd delta_d delta_dd beta_d beta_dd gamma_d gamma_dd
eqs = subs(eqs, [diff(alpha_,t,t), diff(alpha_,t), alpha_, diff(beta_,t,t), diff(beta_,t), beta_, diff(gamma_,t,t), diff(gamma_,t), gamma_, diff(delta_,t,t), diff(delta_,t), delta_], [alpha_dd, alpha_d, alpha, beta_dd, beta_d, beta, gamma_dd, gamma_d, gamma, delta_dd, delta_d, delta]);
[A, b] = equationsToMatrix(eqs, [alpha_dd; beta_dd; delta_dd; gamma_dd]);

Xdd = A\b


function xdot = eom(t,x)
    alpha = x(1);
    beta = x(2);
    gamma = x(3);
    delta = x(4);
    alpha_d = x(5);
    beta_d = x(6);
    gamma_d = x(7);
    delta_d = x(8);


    Xdd = [(76423946057877712394330035967879099009524405524722382819492096050750000*beta_d*gamma_d*cos(gamma)^2 + 34251616451986631058281102331118006535803460925322758651373190328875000*beta_d*gamma_d*sin(gamma)^2 + 3926504415204791525763742537222856920440791396518143483995412096000000000*cos(gamma)*sin(beta)*sin(gamma) + 5603743290379891353298224402569617329729943735611563139766681600000000000*cos(delta)^2*cos(gamma)*sin(beta)*sin(gamma) + 5603743290379891353298224402569617329729943735611563139766681600000000000*cos(gamma)*sin(beta)*sin(delta)^2*sin(gamma) - 389349273897089330679102905535573103957075922287450521541745378047582896*alpha_d*beta_d*cos(beta)*cos(gamma)^2 - 431521603502980412015151839172334196430796866886850145709864283769457896*alpha_d*beta_d*cos(beta)*sin(gamma)^2 + 94950864807426754678937732083392106038328296936928220323750644314906250*beta_d*delta_d*cos(delta)^2*cos(gamma)^2 + 126456334998878665904778462366289547144880391480736929124695670784000000*beta_d*delta_d*cos(delta)^4*cos(gamma)^2 + 196732898538575103481763771790756260204605292022023999634732780122906250*beta_d*gamma_d*cos(delta)^2*cos(gamma)^2 + 126456334998878665904778462366289547144880391480736929124695670784000000*beta_d*gamma_d*cos(delta)^4*cos(gamma)^2 + 105235458706737837857068841181373116707212523169672996291361587918421875*beta_d*delta_d*cos(delta)^2*sin(gamma)^2 + 94950864807426754678937732083392106038328296936928220323750644314906250*beta_d*delta_d*cos(gamma)^2*sin(delta)^2 + 126456334998878665904778462366289547144880391480736929124695670784000000*beta_d*delta_d*cos(delta)^4*sin(gamma)^2 + 126456334998878665904778462366289547144880391480736929124695670784000000*beta_d*delta_d*cos(gamma)^2*sin(delta)^4 + 146393961150061211819617563484744388266235439347784841100286968526421875*beta_d*gamma_d*cos(delta)^2*sin(gamma)^2 + 196732898538575103481763771790756260204605292022023999634732780122906250*beta_d*gamma_d*cos(gamma)^2*sin(delta)^2 + 126456334998878665904778462366289547144880391480736929124695670784000000*beta_d*gamma_d*cos(delta)^4*sin(gamma)^2 + 126456334998878665904778462366289547144880391480736929124695670784000000*beta_d*gamma_d*cos(gamma)^2*sin(delta)^4 + 105235458706737837857068841181373116707212523169672996291361587918421875*beta_d*delta_d*sin(delta)^2*sin(gamma)^2 + 126456334998878665904778462366289547144880391480736929124695670784000000*beta_d*delta_d*sin(delta)^4*sin(gamma)^2 + 146393961150061211819617563484744388266235439347784841100286968526421875*beta_d*gamma_d*sin(delta)^2*sin(gamma)^2 + 126456334998878665904778462366289547144880391480736929124695670784000000*beta_d*gamma_d*sin(delta)^4*sin(gamma)^2 - 983284705050862066298482222806307362745187186508912157495488445855719798*alpha_d*beta_d*cos(beta)*cos(delta)^2*cos(gamma)^2 - 618952735733775353148350650853440531620292924742921993000815935363219456*alpha_d*beta_d*cos(beta)*cos(delta)^4*cos(gamma)^2 - 1033623642439375957960628431112319234683557039183151316029934257452204173*alpha_d*beta_d*cos(beta)*cos(delta)^2*sin(gamma)^2 - 983284705050862066298482222806307362745187186508912157495488445855719798*alpha_d*beta_d*cos(beta)*cos(gamma)^2*sin(delta)^2 - 618952735733775353148350650853440531620292924742921993000815935363219456*alpha_d*beta_d*cos(beta)*cos(delta)^4*sin(gamma)^2 - 618952735733775353148350650853440531620292924742921993000815935363219456*alpha_d*beta_d*cos(beta)*cos(gamma)^2*sin(delta)^4 - 1033623642439375957960628431112319234683557039183151316029934257452204173*alpha_d*beta_d*cos(beta)*sin(delta)^2*sin(gamma)^2 - 618952735733775353148350650853440531620292924742921993000815935363219456*alpha_d*beta_d*cos(beta)*sin(delta)^4*sin(gamma)^2 + 42172329605891081336048933636761092473720944599399624168118905721875000*alpha_d^2*cos(beta)*cos(gamma)*sin(beta)*sin(gamma) + 42172329605891081336048933636761092473720944599399624168118905721875000*alpha_d*gamma_d*cos(gamma)*sin(beta)*sin(gamma) + 252912669997757331809556924732579094289760782961473858249391341568000000*beta_d*delta_d*cos(delta)^2*cos(gamma)^2*sin(delta)^2 + 252912669997757331809556924732579094289760782961473858249391341568000000*beta_d*gamma_d*cos(delta)^2*cos(gamma)^2*sin(delta)^2 + 252912669997757331809556924732579094289760782961473858249391341568000000*beta_d*delta_d*cos(delta)^2*sin(delta)^2*sin(gamma)^2 + 252912669997757331809556924732579094289760782961473858249391341568000000*beta_d*gamma_d*cos(delta)^2*sin(delta)^2*sin(gamma)^2 - 1237905471467550706296701301706881063240585849485843986001631870726438912*alpha_d*beta_d*cos(beta)*cos(delta)^2*cos(gamma)^2*sin(delta)^2 - 1237905471467550706296701301706881063240585849485843986001631870726438912*alpha_d*beta_d*cos(beta)*cos(delta)^2*sin(delta)^2*sin(gamma)^2 + 50338937388513891662146208306011871938369852674239158534445811596484375*alpha_d^2*cos(beta)*cos(delta)^2*cos(gamma)*sin(beta)*sin(gamma) + 50338937388513891662146208306011871938369852674239158534445811596484375*alpha_d^2*cos(beta)*cos(gamma)*sin(beta)*sin(delta)^2*sin(gamma) - 10284593899311083178131109097981010668884226232744775967610943603515625*alpha_d*delta_d*cos(delta)^2*cos(gamma)*sin(beta)*sin(gamma) + 50338937388513891662146208306011871938369852674239158534445811596484375*alpha_d*gamma_d*cos(delta)^2*cos(gamma)*sin(beta)*sin(gamma) - 10284593899311083178131109097981010668884226232744775967610943603515625*alpha_d*delta_d*cos(gamma)*sin(beta)*sin(delta)^2*sin(gamma) + 50338937388513891662146208306011871938369852674239158534445811596484375*alpha_d*gamma_d*cos(gamma)*sin(beta)*sin(delta)^2*sin(gamma))/(16*(107921345109286508779897069447938048*cos(delta)^2 + 107921345109286508779897069447938048*sin(delta)^2 + 81033702656323036153327122834079417)*(179621720919313878356379449073236959*cos(gamma)^2*sin(beta) + 179621720919313878356379449073236959*sin(beta)*sin(gamma)^2 + 215842690218573017559794138895876096*cos(delta)^2*cos(gamma)^2*sin(beta) + 215842690218573017559794138895876096*cos(delta)^2*sin(beta)*sin(gamma)^2 + 215842690218573017559794138895876096*cos(gamma)^2*sin(beta)*sin(delta)^2 + 215842690218573017559794138895876096*sin(beta)*sin(delta)^2*sin(gamma)^2));
        -(34251616451986631058281102331118006535803460925322758651373190328875000*alpha_d*gamma_d*cos(gamma)^2*sin(beta) - 36250822691098013220624550051113113475693986403247587930539612869005803520*sin(beta)*sin(gamma)^2 - 105618545950988687849115948941837238703687924377436348081564432647197818880*cos(delta)^2*cos(gamma)^2*sin(beta) - 68901975684568924003213441800005129256665468370073916060536797394894848000*cos(delta)^4*cos(gamma)^2*sin(beta) - 100014802660608796495817724539267621373957980641824784941797751047197818880*cos(delta)^2*sin(beta)*sin(gamma)^2 - 105618545950988687849115948941837238703687924377436348081564432647197818880*cos(gamma)^2*sin(beta)*sin(delta)^2 - 68901975684568924003213441800005129256665468370073916060536797394894848000*cos(delta)^4*sin(beta)*sin(gamma)^2 - 68901975684568924003213441800005129256665468370073916060536797394894848000*cos(gamma)^2*sin(beta)*sin(delta)^4 - 100014802660608796495817724539267621373957980641824784941797751047197818880*sin(beta)*sin(delta)^2*sin(gamma)^2 - 68901975684568924003213441800005129256665468370073916060536797394894848000*sin(beta)*sin(delta)^4*sin(gamma)^2 - 40177327106302804746388292588335970396134777799765731414535024965005803520*cos(gamma)^2*sin(beta) + 76423946057877712394330035967879099009524405524722382819492096050750000*alpha_d*gamma_d*sin(beta)*sin(gamma)^2 - 137803951369137848006426883600010258513330936740147832121073594789789696000*cos(delta)^2*cos(gamma)^2*sin(beta)*sin(delta)^2 - 137803951369137848006426883600010258513330936740147832121073594789789696000*cos(delta)^2*sin(beta)*sin(delta)^2*sin(gamma)^2 + 42172329605891081336048933636761092473720944599399624168118905721875000*beta_d*gamma_d*cos(gamma)*sin(gamma) - 198634993525496890478435368420608094947496702980763693529245546720291448*alpha_d^2*cos(beta)*cos(gamma)^2*sin(beta) - 156462663919605809142386434783847002473775758381364069361126640998416448*alpha_d^2*cos(beta)*sin(beta)*sin(gamma)^2 - 10284593899311083178131109097981010668884226232744775967610943603515625*beta_d*delta_d*cos(gamma)*sin(delta)^2*sin(gamma) + 50338937388513891662146208306011871938369852674239158534445811596484375*beta_d*gamma_d*cos(gamma)*sin(delta)^2*sin(gamma) - 443614840644657373070505433813787423208660799917683237464823644462891149*alpha_d^2*cos(beta)*cos(delta)^2*cos(gamma)^2*sin(beta) - 246248200367448343621786094243575492237706266631092531938060132289609728*alpha_d^2*cos(beta)*cos(delta)^4*cos(gamma)^2*sin(beta) - 393275903256143481408359225507775551270290947243444078930377832866406774*alpha_d^2*cos(beta)*cos(delta)^2*sin(beta)*sin(gamma)^2 - 443614840644657373070505433813787423208660799917683237464823644462891149*alpha_d^2*cos(beta)*cos(gamma)^2*sin(beta)*sin(delta)^2 - 246248200367448343621786094243575492237706266631092531938060132289609728*alpha_d^2*cos(beta)*cos(delta)^4*sin(beta)*sin(gamma)^2 - 246248200367448343621786094243575492237706266631092531938060132289609728*alpha_d^2*cos(beta)*cos(gamma)^2*sin(beta)*sin(delta)^4 - 393275903256143481408359225507775551270290947243444078930377832866406774*alpha_d^2*cos(beta)*sin(beta)*sin(delta)^2*sin(gamma)^2 - 246248200367448343621786094243575492237706266631092531938060132289609728*alpha_d^2*cos(beta)*sin(beta)*sin(delta)^4*sin(gamma)^2 + 105235458706737837857068841181373116707212523169672996291361587918421875*alpha_d*delta_d*cos(delta)^2*cos(gamma)^2*sin(beta) + 126456334998878665904778462366289547144880391480736929124695670784000000*alpha_d*delta_d*cos(delta)^4*cos(gamma)^2*sin(beta) + 146393961150061211819617563484744388266235439347784841100286968526421875*alpha_d*gamma_d*cos(delta)^2*cos(gamma)^2*sin(beta) + 126456334998878665904778462366289547144880391480736929124695670784000000*alpha_d*gamma_d*cos(delta)^4*cos(gamma)^2*sin(beta) + 94950864807426754678937732083392106038328296936928220323750644314906250*alpha_d*delta_d*cos(delta)^2*sin(beta)*sin(gamma)^2 + 105235458706737837857068841181373116707212523169672996291361587918421875*alpha_d*delta_d*cos(gamma)^2*sin(beta)*sin(delta)^2 + 126456334998878665904778462366289547144880391480736929124695670784000000*alpha_d*delta_d*cos(delta)^4*sin(beta)*sin(gamma)^2 + 126456334998878665904778462366289547144880391480736929124695670784000000*alpha_d*delta_d*cos(gamma)^2*sin(beta)*sin(delta)^4 + 196732898538575103481763771790756260204605292022023999634732780122906250*alpha_d*gamma_d*cos(delta)^2*sin(beta)*sin(gamma)^2 + 146393961150061211819617563484744388266235439347784841100286968526421875*alpha_d*gamma_d*cos(gamma)^2*sin(beta)*sin(delta)^2 + 126456334998878665904778462366289547144880391480736929124695670784000000*alpha_d*gamma_d*cos(delta)^4*sin(beta)*sin(gamma)^2 + 126456334998878665904778462366289547144880391480736929124695670784000000*alpha_d*gamma_d*cos(gamma)^2*sin(beta)*sin(delta)^4 + 94950864807426754678937732083392106038328296936928220323750644314906250*alpha_d*delta_d*sin(beta)*sin(delta)^2*sin(gamma)^2 + 126456334998878665904778462366289547144880391480736929124695670784000000*alpha_d*delta_d*sin(beta)*sin(delta)^4*sin(gamma)^2 + 196732898538575103481763771790756260204605292022023999634732780122906250*alpha_d*gamma_d*sin(beta)*sin(delta)^2*sin(gamma)^2 + 126456334998878665904778462366289547144880391480736929124695670784000000*alpha_d*gamma_d*sin(beta)*sin(delta)^4*sin(gamma)^2 + 42172329605891081336048933636761092473720944599399624168118905721875000*alpha_d*beta_d*cos(beta)*cos(gamma)*sin(gamma) - 10284593899311083178131109097981010668884226232744775967610943603515625*beta_d*delta_d*cos(delta)^2*cos(gamma)*sin(gamma) + 50338937388513891662146208306011871938369852674239158534445811596484375*beta_d*gamma_d*cos(delta)^2*cos(gamma)*sin(gamma) - 492496400734896687243572188487150984475412533262185063876120264579219456*alpha_d^2*cos(beta)*cos(delta)^2*cos(gamma)^2*sin(beta)*sin(delta)^2 - 492496400734896687243572188487150984475412533262185063876120264579219456*alpha_d^2*cos(beta)*cos(delta)^2*sin(beta)*sin(delta)^2*sin(gamma)^2 + 252912669997757331809556924732579094289760782961473858249391341568000000*alpha_d*delta_d*cos(delta)^2*cos(gamma)^2*sin(beta)*sin(delta)^2 + 252912669997757331809556924732579094289760782961473858249391341568000000*alpha_d*gamma_d*cos(delta)^2*cos(gamma)^2*sin(beta)*sin(delta)^2 + 252912669997757331809556924732579094289760782961473858249391341568000000*alpha_d*delta_d*cos(delta)^2*sin(beta)*sin(delta)^2*sin(gamma)^2 + 252912669997757331809556924732579094289760782961473858249391341568000000*alpha_d*gamma_d*cos(delta)^2*sin(beta)*sin(delta)^2*sin(gamma)^2 + 50338937388513891662146208306011871938369852674239158534445811596484375*alpha_d*beta_d*cos(beta)*cos(delta)^2*cos(gamma)*sin(gamma) + 50338937388513891662146208306011871938369852674239158534445811596484375*alpha_d*beta_d*cos(beta)*cos(gamma)*sin(delta)^2*sin(gamma))/(16*(107921345109286508779897069447938048*cos(delta)^2 + 107921345109286508779897069447938048*sin(delta)^2 + 81033702656323036153327122834079417)*(179621720919313878356379449073236959*cos(gamma)^2 + 179621720919313878356379449073236959*sin(gamma)^2 + 215842690218573017559794138895876096*cos(delta)^2*cos(gamma)^2 + 215842690218573017559794138895876096*cos(delta)^2*sin(gamma)^2 + 215842690218573017559794138895876096*cos(gamma)^2*sin(delta)^2 + 215842690218573017559794138895876096*sin(delta)^2*sin(gamma)^2));
        -(1172503524893525*(beta_d*cos(gamma) + alpha_d*sin(beta)*sin(gamma))*(beta_d*sin(gamma) - alpha_d*cos(gamma)*sin(beta)))/2764574727905982;
        -(105639854939229361219673820582119727779756472841096806600042942774864523779750293250000*beta_d*gamma_d*cos(beta)*cos(gamma)^2 + 47345576616545498571000475772876628087827011255299812010776344678528514531329915125000*beta_d*gamma_d*cos(beta)*sin(gamma)^2 + 136530185549551498916930460463168183800193567078764874592309425437632189282209601224600*alpha_d^2*cos(gamma)*sin(beta)^3*sin(gamma)^3 + 136530185549551498916930460463168183800193567078764874592309425437632189282209601224600*alpha_d^2*cos(gamma)^3*sin(beta)^3*sin(gamma) - 538192581472218698160313212831614405611802689722670649671553673013420919406687319641936*alpha_d*beta_d*cos(beta)^2*cos(gamma)^2 - 596486859794902560808986557640857505303732151308467644260820271109756928655107697766936*alpha_d*beta_d*cos(beta)^2*sin(gamma)^2 - 321916218205724029689993516706867066695779581281883728135798307894142721593218806445968*alpha_d*beta_d*cos(gamma)^2*sin(beta)^2 + 136530185549551498916930460463168183800193567078764874592309425437632189282209601224600*alpha_d*beta_d*cos(gamma)^4*sin(beta)^2 - 321916218205724029689993516706867066695779581281883728135798307894142721593218806445968*alpha_d*beta_d*sin(beta)^2*sin(gamma)^2 - 136530185549551498916930460463168183800193567078764874592309425437632189282209601224600*alpha_d*beta_d*sin(beta)^2*sin(gamma)^4 + 5427557437643211752263139713717827000172949976593942171906872967234414616779136000000000*cos(beta)*cos(gamma)*sin(beta)*sin(gamma) - 136530185549551498916930460463168183800193567078764874592309425437632189282209601224600*beta_d^2*cos(gamma)*sin(beta)*sin(gamma)^3 - 136530185549551498916930460463168183800193567078764874592309425437632189282209601224600*beta_d^2*cos(gamma)^3*sin(beta)*sin(gamma) - 345893699911256339997794145344959090070795057460607577908389211039830077725186247884800*beta_d^2*cos(delta)^2*cos(gamma)*sin(beta)*sin(gamma)^3 - 345893699911256339997794145344959090070795057460607577908389211039830077725186247884800*beta_d^2*cos(delta)^2*cos(gamma)^3*sin(beta)*sin(gamma) - 218498690730410934784737927712893923642655650092914486436237191725678158211014302105600*beta_d^2*cos(delta)^4*cos(gamma)*sin(beta)*sin(gamma)^3 - 218498690730410934784737927712893923642655650092914486436237191725678158211014302105600*beta_d^2*cos(delta)^4*cos(gamma)^3*sin(beta)*sin(gamma) - 345893699911256339997794145344959090070795057460607577908389211039830077725186247884800*beta_d^2*cos(gamma)*sin(beta)*sin(delta)^2*sin(gamma)^3 - 345893699911256339997794145344959090070795057460607577908389211039830077725186247884800*beta_d^2*cos(gamma)^3*sin(beta)*sin(delta)^2*sin(gamma) - 218498690730410934784737927712893923642655650092914486436237191725678158211014302105600*beta_d^2*cos(gamma)*sin(beta)*sin(delta)^4*sin(gamma)^3 - 218498690730410934784737927712893923642655650092914486436237191725678158211014302105600*beta_d^2*cos(gamma)^3*sin(beta)*sin(delta)^4*sin(gamma) + 131249380619714751144491179690988118586621125026800009017820446014154152181025572093750*beta_d*delta_d*cos(beta)*cos(delta)^2*cos(gamma)^2 + 174798993960756348197390608542753849846273537113462224214112443769004354588114944000000*beta_d*delta_d*cos(beta)*cos(delta)^4*cos(gamma)^2 + 271941399723718215280434589139767797336610288733615494227168411281654523070827300093750*beta_d*gamma_d*cos(beta)*cos(delta)^2*cos(gamma)^2 + 174798993960756348197390608542753849846273537113462224214112443769004354588114944000000*beta_d*gamma_d*cos(beta)*cos(delta)^4*cos(gamma)^2 + 145465644810120481252162058223311942238581989596706857283884827451949003747230406078125*beta_d*delta_d*cos(beta)*cos(delta)^2*sin(gamma)^2 + 131249380619714751144491179690988118586621125026800009017820446014154152181025572093750*beta_d*delta_d*cos(beta)*cos(gamma)^2*sin(delta)^2 + 174798993960756348197390608542753849846273537113462224214112443769004354588114944000000*beta_d*delta_d*cos(beta)*cos(delta)^4*sin(gamma)^2 + 174798993960756348197390608542753849846273537113462224214112443769004354588114944000000*beta_d*delta_d*cos(beta)*cos(gamma)^2*sin(delta)^4 + 202358522656754687205081577811001572628472766711423925475374515772655267842228934078125*beta_d*gamma_d*cos(beta)*cos(delta)^2*sin(gamma)^2 + 271941399723718215280434589139767797336610288733615494227168411281654523070827300093750*beta_d*gamma_d*cos(beta)*cos(gamma)^2*sin(delta)^2 + 174798993960756348197390608542753849846273537113462224214112443769004354588114944000000*beta_d*gamma_d*cos(beta)*cos(delta)^4*sin(gamma)^2 + 174798993960756348197390608542753849846273537113462224214112443769004354588114944000000*beta_d*gamma_d*cos(beta)*cos(gamma)^2*sin(delta)^4 + 145465644810120481252162058223311942238581989596706857283884827451949003747230406078125*beta_d*delta_d*cos(beta)*sin(delta)^2*sin(gamma)^2 + 174798993960756348197390608542753849846273537113462224214112443769004354588114944000000*beta_d*delta_d*cos(beta)*sin(delta)^4*sin(gamma)^2 + 202358522656754687205081577811001572628472766711423925475374515772655267842228934078125*beta_d*gamma_d*cos(beta)*sin(delta)^2*sin(gamma)^2 + 174798993960756348197390608542753849846273537113462224214112443769004354588114944000000*beta_d*gamma_d*cos(beta)*sin(delta)^4*sin(gamma)^2 + 345893699911256339997794145344959090070795057460607577908389211039830077725186247884800*alpha_d^2*cos(delta)^2*cos(gamma)*sin(beta)^3*sin(gamma)^3 + 345893699911256339997794145344959090070795057460607577908389211039830077725186247884800*alpha_d^2*cos(delta)^2*cos(gamma)^3*sin(beta)^3*sin(gamma) + 218498690730410934784737927712893923642655650092914486436237191725678158211014302105600*alpha_d^2*cos(delta)^4*cos(gamma)*sin(beta)^3*sin(gamma)^3 + 218498690730410934784737927712893923642655650092914486436237191725678158211014302105600*alpha_d^2*cos(delta)^4*cos(gamma)^3*sin(beta)^3*sin(gamma) + 345893699911256339997794145344959090070795057460607577908389211039830077725186247884800*alpha_d^2*cos(gamma)*sin(beta)^3*sin(delta)^2*sin(gamma)^3 + 345893699911256339997794145344959090070795057460607577908389211039830077725186247884800*alpha_d^2*cos(gamma)^3*sin(beta)^3*sin(delta)^2*sin(gamma) + 218498690730410934784737927712893923642655650092914486436237191725678158211014302105600*alpha_d^2*cos(gamma)*sin(beta)^3*sin(delta)^4*sin(gamma)^3 + 218498690730410934784737927712893923642655650092914486436237191725678158211014302105600*alpha_d^2*cos(gamma)^3*sin(beta)^3*sin(delta)^4*sin(gamma) - 1359182022960050380851586254089165936210934896910692044241394114102654227548800940015818*alpha_d*beta_d*cos(beta)^2*cos(delta)^2*cos(gamma)^2 - 855570545488932589517493676539735847038203969899805669263484289173443648082264400592896*alpha_d*beta_d*cos(beta)^2*cos(delta)^4*cos(gamma)^2 - 1428764900027013908926939265417932160919072418932883612993188009611653482777399306031443*alpha_d*beta_d*cos(beta)^2*cos(delta)^2*sin(gamma)^2 - 1359182022960050380851586254089165936210934896910692044241394114102654227548800940015818*alpha_d*beta_d*cos(beta)^2*cos(gamma)^2*sin(delta)^2 - 815561711341884298066010421614466866773772592822153769234281262692154375309814120054784*alpha_d*beta_d*cos(delta)^2*cos(gamma)^2*sin(beta)^2 - 855570545488932589517493676539735847038203969899805669263484289173443648082264400592896*alpha_d*beta_d*cos(beta)^2*cos(delta)^4*sin(gamma)^2 - 855570545488932589517493676539735847038203969899805669263484289173443648082264400592896*alpha_d*beta_d*cos(beta)^2*cos(gamma)^2*sin(delta)^4 + 345893699911256339997794145344959090070795057460607577908389211039830077725186247884800*alpha_d*beta_d*cos(delta)^2*cos(gamma)^4*sin(beta)^2 - 515184769724844468857442142541244848442238753506633946738798366471224001335189672296448*alpha_d*beta_d*cos(delta)^4*cos(gamma)^2*sin(beta)^2 + 218498690730410934784737927712893923642655650092914486436237191725678158211014302105600*alpha_d*beta_d*cos(delta)^4*cos(gamma)^4*sin(beta)^2 - 1428764900027013908926939265417932160919072418932883612993188009611653482777399306031443*alpha_d*beta_d*cos(beta)^2*sin(delta)^2*sin(gamma)^2 - 815561711341884298066010421614466866773772592822153769234281262692154375309814120054784*alpha_d*beta_d*cos(delta)^2*sin(beta)^2*sin(gamma)^2 - 815561711341884298066010421614466866773772592822153769234281262692154375309814120054784*alpha_d*beta_d*cos(gamma)^2*sin(beta)^2*sin(delta)^2 - 855570545488932589517493676539735847038203969899805669263484289173443648082264400592896*alpha_d*beta_d*cos(beta)^2*sin(delta)^4*sin(gamma)^2 - 345893699911256339997794145344959090070795057460607577908389211039830077725186247884800*alpha_d*beta_d*cos(delta)^2*sin(beta)^2*sin(gamma)^4 - 515184769724844468857442142541244848442238753506633946738798366471224001335189672296448*alpha_d*beta_d*cos(delta)^4*sin(beta)^2*sin(gamma)^2 - 515184769724844468857442142541244848442238753506633946738798366471224001335189672296448*alpha_d*beta_d*cos(gamma)^2*sin(beta)^2*sin(delta)^4 + 345893699911256339997794145344959090070795057460607577908389211039830077725186247884800*alpha_d*beta_d*cos(gamma)^4*sin(beta)^2*sin(delta)^2 - 218498690730410934784737927712893923642655650092914486436237191725678158211014302105600*alpha_d*beta_d*cos(delta)^4*sin(beta)^2*sin(gamma)^4 + 218498690730410934784737927712893923642655650092914486436237191725678158211014302105600*alpha_d*beta_d*cos(gamma)^4*sin(beta)^2*sin(delta)^4 + 58294278322683862648673344809243099691929461585796994589266598096336009248420378125000*alpha_d^2*cos(beta)^2*cos(gamma)*sin(beta)*sin(gamma) + 7745983541128480209019527002681234934260727617113545615320285912254010464665600000000000*cos(beta)*cos(delta)^2*cos(gamma)*sin(beta)*sin(gamma) - 815561711341884298066010421614466866773772592822153769234281262692154375309814120054784*alpha_d*beta_d*sin(beta)^2*sin(delta)^2*sin(gamma)^2 - 345893699911256339997794145344959090070795057460607577908389211039830077725186247884800*alpha_d*beta_d*sin(beta)^2*sin(delta)^2*sin(gamma)^4 - 515184769724844468857442142541244848442238753506633946738798366471224001335189672296448*alpha_d*beta_d*sin(beta)^2*sin(delta)^4*sin(gamma)^2 - 218498690730410934784737927712893923642655650092914486436237191725678158211014302105600*alpha_d*beta_d*sin(beta)^2*sin(delta)^4*sin(gamma)^4 + 7745983541128480209019527002681234934260727617113545615320285912254010464665600000000000*cos(beta)*cos(gamma)*sin(beta)*sin(delta)^2*sin(gamma) - 436997381460821869569475855425787847285311300185828972872474383451356316422028604211200*beta_d^2*cos(delta)^2*cos(gamma)*sin(beta)*sin(delta)^2*sin(gamma)^3 - 436997381460821869569475855425787847285311300185828972872474383451356316422028604211200*beta_d^2*cos(delta)^2*cos(gamma)^3*sin(beta)*sin(delta)^2*sin(gamma) + 58294278322683862648673344809243099691929461585796994589266598096336009248420378125000*alpha_d*gamma_d*cos(beta)*cos(gamma)*sin(beta)*sin(gamma) + 349597987921512696394781217085507699692547074226924448428224887538008709176229888000000*beta_d*delta_d*cos(beta)*cos(delta)^2*cos(gamma)^2*sin(delta)^2 + 349597987921512696394781217085507699692547074226924448428224887538008709176229888000000*beta_d*gamma_d*cos(beta)*cos(delta)^2*cos(gamma)^2*sin(delta)^2 + 349597987921512696394781217085507699692547074226924448428224887538008709176229888000000*beta_d*delta_d*cos(beta)*cos(delta)^2*sin(delta)^2*sin(gamma)^2 + 349597987921512696394781217085507699692547074226924448428224887538008709176229888000000*beta_d*gamma_d*cos(beta)*cos(delta)^2*sin(delta)^2*sin(gamma)^2 + 436997381460821869569475855425787847285311300185828972872474383451356316422028604211200*alpha_d^2*cos(delta)^2*cos(gamma)*sin(beta)^3*sin(delta)^2*sin(gamma)^3 + 436997381460821869569475855425787847285311300185828972872474383451356316422028604211200*alpha_d^2*cos(delta)^2*cos(gamma)^3*sin(beta)^3*sin(delta)^2*sin(gamma) - 1711141090977865179034987353079471694076407939799611338526968578346887296164528801185792*alpha_d*beta_d*cos(beta)^2*cos(delta)^2*cos(gamma)^2*sin(delta)^2 - 1711141090977865179034987353079471694076407939799611338526968578346887296164528801185792*alpha_d*beta_d*cos(beta)^2*cos(delta)^2*sin(delta)^2*sin(gamma)^2 - 1030369539449688937714884285082489696884477507013267893477596732942448002670379344592896*alpha_d*beta_d*cos(delta)^2*cos(gamma)^2*sin(beta)^2*sin(delta)^2 + 436997381460821869569475855425787847285311300185828972872474383451356316422028604211200*alpha_d*beta_d*cos(delta)^2*cos(gamma)^4*sin(beta)^2*sin(delta)^2 + 69582877066963528075353011328766224708137522022191568751793895508999255228598366015625*alpha_d^2*cos(beta)^2*cos(delta)^2*cos(gamma)*sin(beta)*sin(gamma) - 1030369539449688937714884285082489696884477507013267893477596732942448002670379344592896*alpha_d*beta_d*cos(delta)^2*sin(beta)^2*sin(delta)^2*sin(gamma)^2 - 436997381460821869569475855425787847285311300185828972872474383451356316422028604211200*alpha_d*beta_d*cos(delta)^2*sin(beta)^2*sin(delta)^2*sin(gamma)^4 + 69582877066963528075353011328766224708137522022191568751793895508999255228598366015625*alpha_d^2*cos(beta)^2*cos(gamma)*sin(beta)*sin(delta)^2*sin(gamma) - 14216264190405730107670878532323823651960864569906848266064381437794851566204833984375*alpha_d*delta_d*cos(beta)*cos(delta)^2*cos(gamma)*sin(beta)*sin(gamma) + 69582877066963528075353011328766224708137522022191568751793895508999255228598366015625*alpha_d*gamma_d*cos(beta)*cos(delta)^2*cos(gamma)*sin(beta)*sin(gamma) - 14216264190405730107670878532323823651960864569906848266064381437794851566204833984375*alpha_d*delta_d*cos(beta)*cos(gamma)*sin(beta)*sin(delta)^2*sin(gamma) + 69582877066963528075353011328766224708137522022191568751793895508999255228598366015625*alpha_d*gamma_d*cos(beta)*cos(gamma)*sin(beta)*sin(delta)^2*sin(gamma))/(22116597823247856*(107921345109286508779897069447938048*cos(delta)^2 + 107921345109286508779897069447938048*sin(delta)^2 + 81033702656323036153327122834079417)*(179621720919313878356379449073236959*cos(gamma)^2*sin(beta) + 179621720919313878356379449073236959*sin(beta)*sin(gamma)^2 + 215842690218573017559794138895876096*cos(delta)^2*cos(gamma)^2*sin(beta) + 215842690218573017559794138895876096*cos(delta)^2*sin(beta)*sin(gamma)^2 + 215842690218573017559794138895876096*cos(gamma)^2*sin(beta)*sin(delta)^2 + 215842690218573017559794138895876096*sin(beta)*sin(delta)^2*sin(gamma)^2))];


    solXdd  = subs(Xdd, [alpha, beta, gamma, delta, alpha_d, beta_d, gamma_d, delta_d], [x(1), x(2), x(3), x(4), x(5), x(6), x(7), x(8)]);
    
    xdot = [x(5);
            x(6);
            x(7);
            x(8);
            solXdd]; 

end



